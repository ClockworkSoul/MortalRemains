/*
** Pub.c
** Coded by Ilzarion about December 10th, 1997.
** Cyanide added this here.
*/

#include <mudlib.h>

inherit ROOM ;

//These are the default drink prices
// (re-define them in the room if u want them to be different)
#define BEER_NAME1 "beer"
#define BEER_NAME2 "ale"
#define BEER_NAME3 "wine"
#define BEER_NAME4 "whiskey"
#define BEER_NAME5 "dwarfbrew"
#define BEER_PRICE1 10
#define BEER_PRICE2 340
#define BEER_PRICE3 680
#define BEER_PRICE4 1360
#define BEER_PRICE5 2040
#define BEER_HEAL1 10
#define BEER_HEAL2 100
#define BEER_HEAL3 200
#define BEER_HEAL4 400
#define BEER_HEAL5 600
#define COFFEE_NAME1 "coffee"
#define COFFEE_NAME2 "cappacino"
#define COFFEE_NAME3 "espresso"
#define COFFEE_PRICE1 30
#define COFFEE_PRICE2 120
#define COFFEE_PRICE3 360

//you should not re-define the drunk setttings for the beer or coffee
//they are standardized in the code.
#define BEER_DRUNK1 5
#define BEER_DRUNK2 10
#define BEER_DRUNK3 15
#define BEER_DRUNK4 20
#define BEER_DRUNK5 25
#define COFFEE_SOBER1 5
#define COFFEE_SOBER2 15
#define COFFEE_SOBER3 25


void init(){
    add_action("buy_func", "buy");   
    add_action("power_heal", "powerheal");
    add_action("menu_func", "menu");
}


int menu_func(){
    write(  "                         -={     The Pub    }=-\n"+
      "\n"+
      "      Drink                 :   Cost\n"+    
      "\n"+
      sprintf("%-25s   :   %-40d\n", BEER_NAME1, BEER_PRICE1)+
      sprintf("%-25s   :   %-40d\n", BEER_NAME2, BEER_PRICE2)+
      sprintf("%-25s   :   %-40d\n", BEER_NAME3, BEER_PRICE3)+
      sprintf("%-25s   :   %-40d\n", BEER_NAME4, BEER_PRICE4)+
      sprintf("%-25s   :   %-40d\n", BEER_NAME5, BEER_PRICE5)+
      sprintf("%-25s   :   %-40d\n", COFFEE_NAME1, COFFEE_PRICE1)+
      sprintf("%-25s   :   %-40d\n", COFFEE_NAME2, COFFEE_PRICE2)+
      sprintf("%-25s   :   %-40d\n", COFFEE_NAME3, COFFEE_PRICE3)+
      "\n"+
      "                                  No Returns.\n");
    return 1;
}


void buy_func(string str){
    object ob;
    int cost, wealth;

    if (!str) {
	write("Buy what?.\n");
	return;
    }

    if ( (int)TP->query("drunk") > 25 ) {
    	write("The Bartender says, \"Sorry, you've had enough.\"\n");
    	return 1;
    }

    wealth = this_player()->query("wealth");

    if ((this_player()->query_level()) > 10){
	if (str == BEER_NAME1){
	    write(capitalize(BEER_NAME1)+"! That shit tastes like piss!\n");
	    return 1;
	}
    }

    switch (str) {


	//if you want to change the cost, put it as cost =  
    case BEER_NAME1 : cost = BEER_PRICE1;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL1);
	//this gives them drunkenness (remember it goes from 1 - 25)
	this_player()->set("drunk", (this_player()->query("drunk")+BEER_DRUNK1));
	write ("You pound a "+BEER_NAME1+" in true style.\n");
	say(TPN+" pounds a "+BEER_NAME1+" like a pro.\n");
	break;

    case BEER_NAME2 : cost = BEER_PRICE2;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->receive_healing(BEER_HEAL2);
	this_player()->set("drunk", (this_player()->query("drunk")+BEER_DRUNK2));
	write ("You slam an "+BEER_NAME2+" and wipe the froth from your lips.\n");
	say(TPN+" slams an "+BEER_NAME2+".\n");
	break;

    case BEER_NAME3 : cost = BEER_PRICE3;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->receive_healing(BEER_HEAL3);
	this_player()->set("drunk", (this_player()->query("drunk")+BEER_DRUNK3));
	write ("You downs a "+BEER_NAME3+", you get a warm sensation.\n");
	say(TPN+" downs a "+BEER_NAME3+" and seems to stagger.\n");
	break;

    case BEER_NAME4 : cost = BEER_PRICE4;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->receive_healing(BEER_HEAL4);
	this_player()->set("drunk", (this_player()->query("drunk")+BEER_DRUNK4));
	write ("You tear into a "+BEER_NAME4+" like the person you are.\n");
	say(TPN+" tears into a "+BEER_NAME4+" and says, YEAH Bitch!.\n");
	break;

    case BEER_NAME5 : cost = BEER_PRICE5;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->receive_healing(BEER_HEAL5);
	this_player()->set("drunk", (this_player()->query("drunk")+BEER_DRUNK5));
	write ("Your head spins as you slam a flask of "+BEER_NAME5+".\n");
	say(TPN+" says, Now that's the stuff! as they slam a flask of "+BEER_NAME5+".\n");
	break;

    case COFFEE_NAME1 : cost = COFFEE_PRICE1;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->set("drunk", (this_player()->query("drunk")-COFFEE_SOBER1));
	if (this_player()->query("drunk")<1){
	    this_player()->set("drunk", 0);
	    write ("You are completely sober.\n");
	}
	write ("You drink a "+COFFEE_NAME1+".\n");
	say(TPN+" drinks a "+COFFEE_NAME1+".\n");
	break;

    case COFFEE_NAME2 : cost = COFFEE_PRICE2;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->set("drunk", (this_player()->query("drunk")-COFFEE_SOBER2));
	if (this_player()->query("drunk")<1){
	    this_player()->set("drunk", 0);
	    write ("You are completely sober.\n");
	}
	write ("You drink a "+COFFEE_NAME2+".\n");
	say(TPN+" drinks a "+COFFEE_NAME2+".\n");
	break;

    case COFFEE_NAME3 : cost = COFFEE_PRICE3;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	this_player()->set("drunk", (this_player()->query("drunk")-COFFEE_SOBER3));
	if (this_player()->query("drunk")<1){
	    this_player()->set("drunk", 0);
	    write ("You are completely sober.\n");
	}
	write ("You drink an "+COFFEE_NAME3+".\n");
	say(TPN+" drinks an "+COFFEE_NAME3+".\n");
	break;




    default : write ("What did you want to buy?\n"); break;
	return;
    }
    return 1;
}


void power_heal(string str){

    object ob;
    int cost, needed, wealth, mult;

    if (!str) {
	write("Buy what?.\n");
	return;
    }
    wealth = this_player()->query("wealth");
    needed = ( (this_player()->query("max_hp")) - (this_player()->query("hit_points")) );

    if ((this_player()->query_level()) > 10){
	if (str == BEER_NAME1){
	    write(BEER_NAME1+"! that shit tastes like piss!\n");
	    return 1;
	}
    } 


    //make sure the cost is the price of the drink + the coffee needed to sober.  
    switch (str) {

    case BEER_NAME1 : cost = BEER_PRICE1+COFFEE_PRICE1;
	mult = ((needed/BEER_HEAL1)+1);
	cost *= mult;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL1*mult);
	write ("You pound "+mult+" "+BEER_NAME1+"s and "+COFFEE_NAME1+"'s.\n");
	say(TPN+" pounds "+mult+" "+BEER_NAME1+"s and "+COFFEE_NAME1+"'s.\n");
	break;

    case BEER_NAME2 : cost = BEER_PRICE2+(2 * COFFEE_PRICE1);
	mult = ((needed/BEER_HEAL2)+1);
	cost *= mult;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL2*mult);
	write ("You pound "+mult+" "+BEER_NAME2+"s and "+COFFEE_NAME1+"'s.\n");
	say(TPN+" pounds "+mult+" "+BEER_NAME2+"s and "+COFFEE_NAME1+"'s.\n");
	break;

    case BEER_NAME3 : cost = BEER_PRICE3+COFFEE_PRICE2;
	mult = ((needed/BEER_HEAL3)+1);
	cost *= mult;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL3*mult);
	write ("You pound "+mult+" "+BEER_NAME3+"s and "+COFFEE_NAME2+"'s.\n");
	say(TPN+" pounds "+mult+" "+BEER_NAME3+"s and "+COFFEE_NAME2+"'s.\n");
	break;

    case BEER_NAME4 : cost = BEER_PRICE4+COFFEE_PRICE3;
	mult = ((needed/BEER_HEAL4)+1);
	cost *= mult;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL4*mult);
	write ("You pound "+mult+" "+BEER_NAME4+"s and "+COFFEE_NAME3+"'s.\n");
	say(TPN+" pounds "+mult+" "+BEER_NAME4+"s and "+COFFEE_NAME3+"'s.\n");
	break;

    case BEER_NAME5 : cost = BEER_PRICE5+COFFEE_PRICE3;
	mult = ((needed/BEER_HEAL5)+1);
	cost *= mult;
	if (this_player()->query("wealth")<cost){
	    write("You don't have enough cash for that!\n");
	    return 1;
	}
	this_player()->debit(cost);
	//this is the number of hp's recieved
	this_player()->receive_healing(BEER_HEAL5*mult);
	write ("You pound "+mult+" "+BEER_NAME5+"s and "+COFFEE_NAME3+"'s.\n");
	say(TPN+" pounds "+mult+" "+BEER_NAME5+"s and "+COFFEE_NAME3+"'s.\n");
	break;

    default : write ("What did you want to buy?\n"); break;
	return;
    }
    return 1;
}
